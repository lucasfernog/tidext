initSidebarItems({"enum":[["Error","Stronghold Client error block."],["Location","A `Location` type used to specify where in the `Stronghold` a piece of data should be stored. A generic location specifies a non-versioned location while a counter location specifies a versioned location. The Counter location can be used to get the head of the version chain by passing in `None` as the counter index. Otherwise, counter records are referenced through their associated index.  On Read, the `None` location is the latest record in the version chain while on Write, the `None` location is the next record in the version chain."],["ProcResult",""],["Procedure","for old client (cryptographic) procedure calling"],["ResultMessage","Return value used for Actor Messages.  Can specify an `Error` or an `Ok` result."],["SLIP10DeriveInput",""],["StrongholdFlags","Policy options for modifying an entire Stronghold.  Must be specified on creation."],["VaultFlags","Policy options for for a specific vault.  Must be specified on creation."]],"fn":[["home_dir","Get the preferred Stronghold home directory"],["naive_kdf","a wrapper around the [`HMAC_SHA256`] function used to derive a hash from a given password."],["snapshot_dir","Get the preferred snapshot directory"]],"macro":[["line_error","TODO: Should be replaced with proper errors."],["unwrap_or_err",""],["unwrap_result_msg",""]],"struct":[["Provider","An implementation of the Vaultâ€™s [`BoxProvider`] type.  Used to encrypt and decrypt the data in this Stronghold."],["RecordHint","a record hint.  Used as a hint to what this data is used for."],["RecordId","A record identifier.  Contains a [`ChainId`] which refers to the transaction."],["Stronghold","The main type for the Stronghold System.  Used as the entry point for the actor model.  Contains various pieces of metadata to interpret the data in the vault and store."]],"type":[["Key","Key type alias."],["Result","Stronghold Client Result Type."],["StatusMessage","A type alias for the empty `ResultMessage<()>` type."]]});